{"ast":null,"code":"var _jsxFileName = \"E:\\\\SEM 4\\\\MERN\\\\end_sem_project\\\\SocialEcho-main\\\\client\\\\src\\\\components\\\\profile\\\\BlockedDevicesLocations.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getTrustedContextAuthDataAction, getBlockedAuthContextDataAction, unblockContextAuthDataAction } from \"../../redux/actions/authActions\";\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlockedDevicesLocations = ({\n  blockedContextAuthData\n}) => {\n  _s();\n  const [loading, setLoading] = useState({});\n  const dispatch = useDispatch();\n  const handleUnblock = async contextId => {\n    setLoading(prevState => ({\n      ...prevState,\n      [contextId]: true\n    }));\n    await dispatch(unblockContextAuthDataAction(contextId));\n    await dispatch(getBlockedAuthContextDataAction());\n    await dispatch(getTrustedContextAuthDataAction());\n    setLoading(prevState => ({\n      ...prevState,\n      [contextId]: false\n    }));\n  };\n  const blockedDevices = blockedContextAuthData === null || blockedContextAuthData === void 0 ? void 0 : blockedContextAuthData.map(device => ({\n    _id: device._id,\n    device: device.device,\n    deviceType: device.deviceType,\n    ipAddress: device.ip,\n    location: `${device.city}, ${device.country}`,\n    browser: device.browser,\n    operatingSystem: device.os,\n    time: device.time\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto mt-12 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-medium text-gray-900\",\n      children: \"Blocked Devices and Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 border-t border-gray-200 pt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flow-root\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"-my-5 divide-y divide-gray-200\",\n          children: [blockedDevices.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-gray-900\",\n            children: \"Not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), blockedDevices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"py-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"min-w-0 flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: [device.device, \" \", device.deviceType, \" - \", device.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-1 text-sm text-gray-500\",\n                    children: [\"(\", device.ipAddress, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1 flex items-center space-x-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-500\",\n                    children: device.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-500\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [device.browser, \" on \", device.operatingSystem]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: loading[device._id],\n                  onClick: () => handleUnblock(device._id),\n                  type: \"button\",\n                  className: `inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white ${loading[device._id] ? \"bg-gray-400 cursor-not-allowed\" : \"bg-blue-500 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\"}`,\n                  children: loading[device._id] ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                    loadingText: \"unblocking...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, this) : \"Unblock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, device._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BlockedDevicesLocations, \"AUhU7+B5tmIDqhEkuavyuZgtiws=\", false, function () {\n  return [useDispatch];\n});\n_c = BlockedDevicesLocations;\nexport default BlockedDevicesLocations;\nvar _c;\n$RefreshReg$(_c, \"BlockedDevicesLocations\");","map":{"version":3,"names":["useState","useDispatch","getTrustedContextAuthDataAction","getBlockedAuthContextDataAction","unblockContextAuthDataAction","LoadingSpinner","jsxDEV","_jsxDEV","BlockedDevicesLocations","blockedContextAuthData","_s","loading","setLoading","dispatch","handleUnblock","contextId","prevState","blockedDevices","map","device","_id","deviceType","ipAddress","ip","location","city","country","browser","operatingSystem","os","time","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","disabled","onClick","type","loadingText","_c","$RefreshReg$"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/components/profile/BlockedDevicesLocations.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getTrustedContextAuthDataAction,\n  getBlockedAuthContextDataAction,\n  unblockContextAuthDataAction,\n} from \"../../redux/actions/authActions\";\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\n\nconst BlockedDevicesLocations = ({ blockedContextAuthData }) => {\n  const [loading, setLoading] = useState({});\n  const dispatch = useDispatch();\n\n  const handleUnblock = async (contextId) => {\n    setLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(unblockContextAuthDataAction(contextId));\n    await dispatch(getBlockedAuthContextDataAction());\n    await dispatch(getTrustedContextAuthDataAction());\n\n    setLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const blockedDevices = blockedContextAuthData?.map((device) => ({\n    _id: device._id,\n    device: device.device,\n    deviceType: device.deviceType,\n    ipAddress: device.ip,\n    location: `${device.city}, ${device.country}`,\n    browser: device.browser,\n    operatingSystem: device.os,\n    time: device.time,\n  }));\n\n  return (\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\n      <h2 className=\"text-lg font-medium text-gray-900\">\n        Blocked Devices and Locations\n      </h2>\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\n        <div className=\"flow-root\">\n          <ul className=\"-my-5 divide-y divide-gray-200\">\n            {blockedDevices.length === 0 && (\n              <span className=\"text-sm font-medium text-gray-900\">\n                Not available\n              </span>\n            )}\n            {blockedDevices.map((device) => (\n              <li key={device._id} className=\"py-5\">\n                <div className=\"flex items-center justify-between space-x-4\">\n                  <div className=\"min-w-0 flex-1\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {device.device} {device.deviceType} - {device.time}\n                      </span>\n\n                      <span className=\"ml-1 text-sm text-gray-500\">\n                        ({device.ipAddress})\n                      </span>\n                    </div>\n                    <div className=\"mt-1 flex items-center space-x-4\">\n                      <span className=\"text-sm text-gray-500\">\n                        {device.location}\n                      </span>\n                      <span className=\"text-sm text-gray-500\">•</span>\n                      <span className=\"text-sm text-gray-500\">\n                        {device.browser} on {device.operatingSystem}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <button\n                      disabled={loading[device._id]}\n                      onClick={() => handleUnblock(device._id)}\n                      type=\"button\"\n                      className={`inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white ${\n                        loading[device._id]\n                          ? \"bg-gray-400 cursor-not-allowed\"\n                          : \"bg-blue-500 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\"\n                      }`}\n                    >\n                      {loading[device._id] ? (\n                        <LoadingSpinner loadingText={\"unblocking...\"} />\n                      ) : (\n                        \"Unblock\"\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlockedDevicesLocations;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}