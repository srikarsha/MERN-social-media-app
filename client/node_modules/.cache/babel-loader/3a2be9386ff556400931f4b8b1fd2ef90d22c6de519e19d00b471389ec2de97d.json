{"ast":null,"code":"import _slicedToArray from\"E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useCallback,useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router\";import{Link}from\"react-router-dom\";import axios from\"axios\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var BASE_URL=process.env.REACT_APP_API_URL;var LoginVerified=function LoginVerified(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isVerified=_useState2[0],setIsVerified=_useState2[1];var navigate=useNavigate();var location=useLocation();var searchParams=new URLSearchParams(location.search);var idFromUrl=searchParams.get(\"id\");var emailFromUrl=searchParams.get(\"email\");var handleVerify=useCallback(function(){var verifyUrl=\"\".concat(BASE_URL,\"/auth/verify-login?id=\").concat(idFromUrl,\"&email=\").concat(emailFromUrl);axios.get(verifyUrl).then(function(res){if(res.status===200){setIsVerified(true);}}).catch(function(err){setIsVerified(false);});},[idFromUrl,emailFromUrl,setIsVerified]);useEffect(function(){// Automatically trigger handleVerify if both id and email are present in the URL\nif(idFromUrl&&emailFromUrl){handleVerify();}},[idFromUrl,emailFromUrl,handleVerify]);if(!isVerified){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-200 text-black p-4 rounded-lg shadow-md flex justify-center items-center\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-center\",children:[\"You may not have been verified yet. Please check your email for a link to verify your account. If you have already verified your account, please try\",/*#__PURE__*/_jsxs(Link,{className:\"text-blue-500 font-bold\",to:\"/signin\",children:[\" \",\"logging in\",\" \"]}),\"again.\"]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center justify-center h-screen bg-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md w-full px-4 py-8 bg-white rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-green-600 mb-4\",children:\"Congratulations!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"You have been verified and can now login.\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return navigate(\"/signin\");},className:\"w-full py-2 px-4 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-opacity-50\",children:\"Login Now\"})]})});};export default LoginVerified;","map":{"version":3,"names":["useState","useCallback","useEffect","useNavigate","useLocation","Link","axios","jsxs","_jsxs","jsx","_jsx","BASE_URL","process","env","REACT_APP_API_URL","LoginVerified","_useState","_useState2","_slicedToArray","isVerified","setIsVerified","navigate","location","searchParams","URLSearchParams","search","idFromUrl","get","emailFromUrl","handleVerify","verifyUrl","concat","then","res","status","catch","err","className","children","to","onClick"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/pages/LoginVerified.jsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_API_URL;\n\nconst LoginVerified = () => {\n  const [isVerified, setIsVerified] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const idFromUrl = searchParams.get(\"id\");\n  const emailFromUrl = searchParams.get(\"email\");\n\n  const handleVerify = useCallback(() => {\n    const verifyUrl = `${BASE_URL}/auth/verify-login?id=${idFromUrl}&email=${emailFromUrl}`;\n    axios\n      .get(verifyUrl)\n      .then((res) => {\n        if (res.status === 200) {\n          setIsVerified(true);\n        }\n      })\n      .catch((err) => {\n        setIsVerified(false);\n      });\n  }, [idFromUrl, emailFromUrl, setIsVerified]);\n\n  useEffect(() => {\n    // Automatically trigger handleVerify if both id and email are present in the URL\n    if (idFromUrl && emailFromUrl) {\n      handleVerify();\n    }\n  }, [idFromUrl, emailFromUrl, handleVerify]);\n\n  if (!isVerified) {\n    return (\n      <div className=\"bg-yellow-200 text-black p-4 rounded-lg shadow-md flex justify-center items-center\">\n        <p className=\"text-center\">\n          You may not have been verified yet. Please check your email for a link\n          to verify your account. If you have already verified your account,\n          please try\n          <Link className=\"text-blue-500 font-bold\" to=\"/signin\">\n            {\" \"}\n            logging in{\" \"}\n          </Link>\n          again.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n      <div className=\"max-w-md w-full px-4 py-8 bg-white rounded-lg shadow-lg\">\n        <div className=\"mb-4 text-center\">\n          <h2 className=\"text-3xl font-bold text-green-600 mb-4\">\n            Congratulations!\n          </h2>\n          <p className=\"text-gray-600\">\n            You have been verified and can now login.\n          </p>\n        </div>\n        <button\n          onClick={() => navigate(\"/signin\")}\n          className=\"w-full py-2 px-4 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-opacity-50\"\n        >\n          Login Now\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginVerified;\n"],"mappings":"0IAAA,OAASA,QAAQ,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CACxD,OAASC,WAAW,CAAEC,WAAW,KAAQ,cAAc,CACvD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAC1B,GAAM,CAAAC,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAE9C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,IAAAC,SAAA,CAAoChB,QAAQ,CAAC,KAAK,CAAC,CAAAiB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAChC,GAAM,CAAAI,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAmB,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAE9B,GAAM,CAAAmB,YAAY,CAAG,GAAI,CAAAC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CACzD,GAAM,CAAAC,SAAS,CAAGH,YAAY,CAACI,GAAG,CAAC,IAAI,CAAC,CACxC,GAAM,CAAAC,YAAY,CAAGL,YAAY,CAACI,GAAG,CAAC,OAAO,CAAC,CAE9C,GAAM,CAAAE,YAAY,CAAG5B,WAAW,CAAC,UAAM,CACrC,GAAM,CAAA6B,SAAS,IAAAC,MAAA,CAAMpB,QAAQ,2BAAAoB,MAAA,CAAyBL,SAAS,YAAAK,MAAA,CAAUH,YAAY,CAAE,CACvFtB,KAAK,CACFqB,GAAG,CAACG,SAAS,CAAC,CACdE,IAAI,CAAC,SAACC,GAAG,CAAK,CACb,GAAIA,GAAG,CAACC,MAAM,GAAK,GAAG,CAAE,CACtBd,aAAa,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAC,CACDe,KAAK,CAAC,SAACC,GAAG,CAAK,CACdhB,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAAC,CACN,CAAC,CAAE,CAACM,SAAS,CAAEE,YAAY,CAAER,aAAa,CAAC,CAAC,CAE5ClB,SAAS,CAAC,UAAM,CACd;AACA,GAAIwB,SAAS,EAAIE,YAAY,CAAE,CAC7BC,YAAY,CAAC,CAAC,CAChB,CACF,CAAC,CAAE,CAACH,SAAS,CAAEE,YAAY,CAAEC,YAAY,CAAC,CAAC,CAE3C,GAAI,CAACV,UAAU,CAAE,CACf,mBACET,IAAA,QAAK2B,SAAS,CAAC,oFAAoF,CAAAC,QAAA,cACjG9B,KAAA,MAAG6B,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,sJAIzB,cAAA9B,KAAA,CAACH,IAAI,EAACgC,SAAS,CAAC,yBAAyB,CAACE,EAAE,CAAC,SAAS,CAAAD,QAAA,EACnD,GAAG,CAAC,YACK,CAAC,GAAG,EACV,CAAC,SAET,EAAG,CAAC,CACD,CAAC,CAEV,CAEA,mBACE5B,IAAA,QAAK2B,SAAS,CAAC,gEAAgE,CAAAC,QAAA,cAC7E9B,KAAA,QAAK6B,SAAS,CAAC,yDAAyD,CAAAC,QAAA,eACtE9B,KAAA,QAAK6B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B5B,IAAA,OAAI2B,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,kBAEvD,CAAI,CAAC,cACL5B,IAAA,MAAG2B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,2CAE7B,CAAG,CAAC,EACD,CAAC,cACN5B,IAAA,WACE8B,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAnB,QAAQ,CAAC,SAAS,CAAC,EAAC,CACnCgB,SAAS,CAAC,mJAAmJ,CAAAC,QAAA,CAC9J,WAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}