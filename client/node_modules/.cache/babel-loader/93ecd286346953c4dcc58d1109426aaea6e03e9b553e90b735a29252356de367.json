{"ast":null,"code":"import * as types from \"../constants/communityConstants\";\nimport { LOGOUT } from \"../constants/authConstants\";\nconst initialState = {\n  communityData: null,\n  joinedCommunities: null,\n  notJoinedCommunities: [],\n  reportedPosts: null,\n  communityError: null\n};\nconst communityReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOGOUT:\n      return {\n        ...state,\n        communityData: null,\n        joinedCommunities: null,\n        notJoinedCommunities: [],\n        reportedPosts: null,\n        communityError: null\n      };\n    case types.GET_COMMUNITY_SUCCESS:\n      return {\n        ...state,\n        communityData: payload ? payload : null,\n        communityError: null\n      };\n    case types.GET_COMMUNITY_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.GET_JOINED_COMMUNITIES_SUCCESS:\n      return {\n        ...state,\n        joinedCommunities: payload ? payload : null,\n        communityError: null\n      };\n    case types.GET_JOINED_COMMUNITIES_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.GET_NOT_JOINED_COMMUNITIES_SUCCESS:\n      return {\n        ...state,\n        notJoinedCommunities: payload ? payload : [],\n        communityError: null\n      };\n    case types.GET_NOT_JOINED_COMMUNITIES_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.JOIN_COMMUNITY_SUCCESS:\n      return {\n        ...state,\n        joinedCommunities: [...state.joinedCommunities, payload],\n        notJoinedCommunities: state.notJoinedCommunities.filter(community => community.name !== payload.name),\n        communityError: null\n      };\n    case types.JOIN_COMMUNITY_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.LEAVE_COMMUNITY_SUCCESS:\n      return {\n        ...state,\n        joinedCommunities: state.joinedCommunities.filter(community => community.name !== payload.name),\n        notJoinedCommunities: [...state.notJoinedCommunities, payload],\n        communityError: null\n      };\n    case types.LEAVE_COMMUNITY_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.REPORT_POST_SUCCESS:\n      return {\n        ...state,\n        communityError: null\n      };\n    case types.REPORT_POST_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.GET_REPORTED_POSTS_SUCCESS:\n      return {\n        ...state,\n        reportedPosts: payload ? payload : [],\n        communityError: null\n      };\n    case types.GET_REPORTED_POSTS_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    case types.DELETE_REPORTED_POST_FAIL:\n      return {\n        ...state,\n        communityError: payload\n      };\n    default:\n      return state;\n  }\n};\nexport default communityReducer;","map":{"version":3,"names":["types","LOGOUT","initialState","communityData","joinedCommunities","notJoinedCommunities","reportedPosts","communityError","communityReducer","state","action","type","payload","GET_COMMUNITY_SUCCESS","GET_COMMUNITY_FAIL","GET_JOINED_COMMUNITIES_SUCCESS","GET_JOINED_COMMUNITIES_FAIL","GET_NOT_JOINED_COMMUNITIES_SUCCESS","GET_NOT_JOINED_COMMUNITIES_FAIL","JOIN_COMMUNITY_SUCCESS","filter","community","name","JOIN_COMMUNITY_FAIL","LEAVE_COMMUNITY_SUCCESS","LEAVE_COMMUNITY_FAIL","REPORT_POST_SUCCESS","REPORT_POST_FAIL","GET_REPORTED_POSTS_SUCCESS","GET_REPORTED_POSTS_FAIL","DELETE_REPORTED_POST_FAIL"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/redux/reducers/community.js"],"sourcesContent":["import * as types from \"../constants/communityConstants\";\nimport { LOGOUT } from \"../constants/authConstants\";\n\nconst initialState = {\n  communityData: null,\n  joinedCommunities: null,\n  notJoinedCommunities: [],\n  reportedPosts: null,\n  communityError: null,\n};\n\nconst communityReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGOUT:\n      return {\n        ...state,\n        communityData: null,\n        joinedCommunities: null,\n        notJoinedCommunities: [],\n        reportedPosts: null,\n        communityError: null,\n      };\n\n    case types.GET_COMMUNITY_SUCCESS:\n      return {\n        ...state,\n        communityData: payload ? payload : null,\n        communityError: null,\n      };\n    case types.GET_COMMUNITY_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.GET_JOINED_COMMUNITIES_SUCCESS:\n      return {\n        ...state,\n        joinedCommunities: payload ? payload : null,\n        communityError: null,\n      };\n    case types.GET_JOINED_COMMUNITIES_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.GET_NOT_JOINED_COMMUNITIES_SUCCESS:\n      return {\n        ...state,\n        notJoinedCommunities: payload ? payload : [],\n        communityError: null,\n      };\n    case types.GET_NOT_JOINED_COMMUNITIES_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.JOIN_COMMUNITY_SUCCESS:\n      return {\n        ...state,\n        joinedCommunities: [...state.joinedCommunities, payload],\n        notJoinedCommunities: state.notJoinedCommunities.filter(\n          (community) => community.name !== payload.name\n        ),\n        communityError: null,\n      };\n    case types.JOIN_COMMUNITY_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.LEAVE_COMMUNITY_SUCCESS:\n      return {\n        ...state,\n        joinedCommunities: state.joinedCommunities.filter(\n          (community) => community.name !== payload.name\n        ),\n        notJoinedCommunities: [...state.notJoinedCommunities, payload],\n        communityError: null,\n      };\n\n    case types.LEAVE_COMMUNITY_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.REPORT_POST_SUCCESS:\n      return {\n        ...state,\n        communityError: null,\n      };\n    case types.REPORT_POST_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.GET_REPORTED_POSTS_SUCCESS:\n      return {\n        ...state,\n        reportedPosts: payload ? payload : [],\n        communityError: null,\n      };\n\n    case types.GET_REPORTED_POSTS_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    case types.DELETE_REPORTED_POST_FAIL:\n      return {\n        ...state,\n        communityError: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default communityReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}