{"ast":null,"code":"import { API, handleApiError } from \"./utils\";\nexport const createPost = async formData => {\n  try {\n    const {\n      data\n    } = await API.post(\"/posts\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    const {\n      response\n    } = error;\n    if ((response === null || response === void 0 ? void 0 : response.status) === 403) {\n      const {\n        type,\n        confirmationToken,\n        info\n      } = response.data || {};\n      if (type === \"inappropriateContent\") {\n        return {\n          isInappropriate: true,\n          data: null\n        };\n      } else if (type === \"failedDetection\") {\n        return {\n          confirmationToken,\n          data: null\n        };\n      } else if (type === \"categoryMismatch\") {\n        return {\n          info,\n          data: null\n        };\n      }\n    }\n    return handleApiError(error);\n  }\n};\nexport const confirmPost = async confirmationToken => {\n  try {\n    const {\n      data\n    } = await API.post(`/posts/confirm/${confirmationToken}`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const rejectPost = async confirmationToken => {\n  try {\n    const {\n      data\n    } = await API.post(`/posts/reject/${confirmationToken}`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getPost = async id => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts/${id}`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getPosts = async (limit = 10, skip = 0) => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts?limit=${limit}&skip=${skip}`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getComPosts = async (communityId, limit = 10, skip = 0) => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts/community/${communityId}?limit=${limit}&skip=${skip}`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const deletePost = async id => {\n  try {\n    const {\n      data\n    } = await API.delete(`/posts/${id}`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const likePost = async id => {\n  try {\n    const {\n      data\n    } = await API.patch(`/posts/${id}/like`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const unlikePost = async id => {\n  try {\n    const {\n      data\n    } = await API.patch(`/posts/${id}/unlike`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const addComment = async (id, newComment) => {\n  try {\n    await API.post(`/posts/${id}/comment`, newComment);\n    return {\n      error: null\n    };\n  } catch (error) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {\n      const {\n        type\n      } = error.response.data || {};\n      if (type === \"inappropriateContent\") {\n        return {\n          error: \"inappropriateContent\"\n        };\n      }\n    }\n    return handleApiError(error);\n  }\n};\nexport const savePost = async id => {\n  try {\n    const {\n      data\n    } = await API.patch(`/posts/${id}/save`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const unsavePost = async id => {\n  try {\n    const {\n      data\n    } = await API.patch(`/posts/${id}/unsave`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getSavedPosts = async () => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts/saved`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getPublicPosts = async publicUserId => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts/${publicUserId}/userPosts`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getFollowingUsersPosts = async communityId => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts/${communityId}/following`);\n    return {\n      error: null,\n      data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};","map":{"version":3,"names":["API","handleApiError","createPost","formData","data","post","headers","error","response","status","type","confirmationToken","info","isInappropriate","confirmPost","rejectPost","getPost","id","get","getPosts","limit","skip","getComPosts","communityId","deletePost","delete","likePost","patch","unlikePost","addComment","newComment","_error$response","savePost","unsavePost","getSavedPosts","getPublicPosts","publicUserId","getFollowingUsersPosts"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/redux/api/postAPI.js"],"sourcesContent":["import { API, handleApiError } from \"./utils\";\n\nexport const createPost = async (formData) => {\n  try {\n    const { data } = await API.post(\"/posts\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return { error: null, data };\n  } catch (error) {\n    const { response } = error;\n    if (response?.status === 403) {\n      const { type, confirmationToken, info } = response.data || {};\n      if (type === \"inappropriateContent\") {\n        return { isInappropriate: true, data: null };\n      } else if (type === \"failedDetection\") {\n        return { confirmationToken, data: null };\n      } else if (type === \"categoryMismatch\") {\n        return { info, data: null };\n      }\n    }\n    return handleApiError(error);\n  }\n};\n\nexport const confirmPost = async (confirmationToken) => {\n  try {\n    const { data } = await API.post(`/posts/confirm/${confirmationToken}`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const rejectPost = async (confirmationToken) => {\n  try {\n    const { data } = await API.post(`/posts/reject/${confirmationToken}`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getPost = async (id) => {\n  try {\n    const { data } = await API.get(`/posts/${id}`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getPosts = async (limit = 10, skip = 0) => {\n  try {\n    const { data } = await API.get(`/posts?limit=${limit}&skip=${skip}`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getComPosts = async (communityId, limit = 10, skip = 0) => {\n  try {\n    const { data } = await API.get(\n      `/posts/community/${communityId}?limit=${limit}&skip=${skip}`\n    );\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const deletePost = async (id) => {\n  try {\n    const { data } = await API.delete(`/posts/${id}`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const likePost = async (id) => {\n  try {\n    const { data } = await API.patch(`/posts/${id}/like`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const unlikePost = async (id) => {\n  try {\n    const { data } = await API.patch(`/posts/${id}/unlike`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const addComment = async (id, newComment) => {\n  try {\n    await API.post(`/posts/${id}/comment`, newComment);\n    return { error: null };\n  } catch (error) {\n    if (error.response?.status === 403) {\n      const { type } = error.response.data || {};\n      if (type === \"inappropriateContent\") {\n        return { error: \"inappropriateContent\" };\n      }\n    }\n    return handleApiError(error);\n  }\n};\n\nexport const savePost = async (id) => {\n  try {\n    const { data } = await API.patch(`/posts/${id}/save`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const unsavePost = async (id) => {\n  try {\n    const { data } = await API.patch(`/posts/${id}/unsave`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getSavedPosts = async () => {\n  try {\n    const { data } = await API.get(`/posts/saved`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getPublicPosts = async (publicUserId) => {\n  try {\n    const { data } = await API.get(`/posts/${publicUserId}/userPosts`);\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getFollowingUsersPosts = async (communityId) => {\n  try {\n    const { data } = await API.get(`/posts/${communityId}/following`);\n\n    return { error: null, data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,cAAc,QAAQ,SAAS;AAE7C,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,QAAQ,EAAEF,QAAQ,EAAE;MAClDG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAO;MAAEC,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM;MAAEC;IAAS,CAAC,GAAGD,KAAK;IAC1B,IAAI,CAAAC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;MAC5B,MAAM;QAAEC,IAAI;QAAEC,iBAAiB;QAAEC;MAAK,CAAC,GAAGJ,QAAQ,CAACJ,IAAI,IAAI,CAAC,CAAC;MAC7D,IAAIM,IAAI,KAAK,sBAAsB,EAAE;QACnC,OAAO;UAAEG,eAAe,EAAE,IAAI;UAAET,IAAI,EAAE;QAAK,CAAC;MAC9C,CAAC,MAAM,IAAIM,IAAI,KAAK,iBAAiB,EAAE;QACrC,OAAO;UAAEC,iBAAiB;UAAEP,IAAI,EAAE;QAAK,CAAC;MAC1C,CAAC,MAAM,IAAIM,IAAI,KAAK,kBAAkB,EAAE;QACtC,OAAO;UAAEE,IAAI;UAAER,IAAI,EAAE;QAAK,CAAC;MAC7B;IACF;IACA,OAAOH,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG,MAAOH,iBAAiB,IAAK;EACtD,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAE,kBAAiBM,iBAAkB,EAAC,CAAC;IACtE,OAAO;MAAEJ,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAOJ,iBAAiB,IAAK;EACrD,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAE,iBAAgBM,iBAAkB,EAAC,CAAC;IACrE,OAAO;MAAEJ,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMS,OAAO,GAAG,MAAOC,EAAE,IAAK;EACnC,IAAI;IACF,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAE,UAASD,EAAG,EAAC,CAAC;IAC9C,OAAO;MAAEV,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMY,QAAQ,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC,KAAK;EACtD,IAAI;IACF,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAE,gBAAeE,KAAM,SAAQC,IAAK,EAAC,CAAC;IACpE,OAAO;MAAEd,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMe,WAAW,GAAG,MAAAA,CAAOC,WAAW,EAAEH,KAAK,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC,KAAK;EACtE,IAAI;IACF,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAC3B,oBAAmBK,WAAY,UAASH,KAAM,SAAQC,IAAK,EAC9D,CAAC;IACD,OAAO;MAAEd,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAG,MAAOP,EAAE,IAAK;EACtC,IAAI;IACF,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACyB,MAAM,CAAE,UAASR,EAAG,EAAC,CAAC;IACjD,OAAO;MAAEV,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMmB,QAAQ,GAAG,MAAOT,EAAE,IAAK;EACpC,IAAI;IACF,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAAC2B,KAAK,CAAE,UAASV,EAAG,OAAM,CAAC;IACrD,OAAO;MAAEV,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMqB,UAAU,GAAG,MAAOX,EAAE,IAAK;EACtC,IAAI;IACF,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAAC2B,KAAK,CAAE,UAASV,EAAG,SAAQ,CAAC;IACvD,OAAO;MAAEV,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMsB,UAAU,GAAG,MAAAA,CAAOZ,EAAE,EAAEa,UAAU,KAAK;EAClD,IAAI;IACF,MAAM9B,GAAG,CAACK,IAAI,CAAE,UAASY,EAAG,UAAS,EAAEa,UAAU,CAAC;IAClD,OAAO;MAAEvB,KAAK,EAAE;IAAK,CAAC;EACxB,CAAC,CAAC,OAAOA,KAAK,EAAE;IAAA,IAAAwB,eAAA;IACd,IAAI,EAAAA,eAAA,GAAAxB,KAAK,CAACC,QAAQ,cAAAuB,eAAA,uBAAdA,eAAA,CAAgBtB,MAAM,MAAK,GAAG,EAAE;MAClC,MAAM;QAAEC;MAAK,CAAC,GAAGH,KAAK,CAACC,QAAQ,CAACJ,IAAI,IAAI,CAAC,CAAC;MAC1C,IAAIM,IAAI,KAAK,sBAAsB,EAAE;QACnC,OAAO;UAAEH,KAAK,EAAE;QAAuB,CAAC;MAC1C;IACF;IACA,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMyB,QAAQ,GAAG,MAAOf,EAAE,IAAK;EACpC,IAAI;IACF,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAAC2B,KAAK,CAAE,UAASV,EAAG,OAAM,CAAC;IACrD,OAAO;MAAEV,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAM0B,UAAU,GAAG,MAAOhB,EAAE,IAAK;EACtC,IAAI;IACF,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAAC2B,KAAK,CAAE,UAASV,EAAG,SAAQ,CAAC;IACvD,OAAO;MAAEV,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAM2B,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAM;MAAE9B;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAE,cAAa,CAAC;IAC9C,OAAO;MAAEX,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAM4B,cAAc,GAAG,MAAOC,YAAY,IAAK;EACpD,IAAI;IACF,MAAM;MAAEhC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAE,UAASkB,YAAa,YAAW,CAAC;IAClE,OAAO;MAAE7B,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAM8B,sBAAsB,GAAG,MAAOd,WAAW,IAAK;EAC3D,IAAI;IACF,MAAM;MAAEnB;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAE,UAASK,WAAY,YAAW,CAAC;IAEjE,OAAO;MAAEhB,KAAK,EAAE,IAAI;MAAEH;IAAK,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAON,cAAc,CAACM,KAAK,CAAC;EAC9B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}