{"ast":null,"code":"import{useSelector,useDispatch}from\"react-redux\";import{useEffect,useMemo}from\"react\";import{getOwnPostAction}from\"../redux/actions/postActions\";import{useNavigate,useParams}from\"react-router-dom\";import CommonLoading from\"../components/loader/CommonLoading\";import PostView from\"../components/post/PostView\";import CommentSidebar from\"../components/post/CommentSidebar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OwnPost=function OwnPost(){var _useParams=useParams(),postId=_useParams.postId;var dispatch=useDispatch();var navigate=useNavigate();var userData=useSelector(function(state){var _state$auth;return(_state$auth=state.auth)===null||_state$auth===void 0?void 0:_state$auth.userData;});var joinedCommunities=useSelector(function(state){var _state$community,_state$community$join;return(_state$community=state.community)===null||_state$community===void 0?void 0:(_state$community$join=_state$community.joinedCommunities)===null||_state$community$join===void 0?void 0:_state$community$join.map(function(_ref){var _id=_ref._id;return _id;});});useEffect(function(){dispatch(getOwnPostAction(postId));},[dispatch,postId]);var _useSelector=useSelector(function(state){return state.posts;}),post=_useSelector.ownPost;var isAuthorized=useMemo(function(){return post&&(joinedCommunities===null||joinedCommunities===void 0?void 0:joinedCommunities.includes(post.community._id));},[post,joinedCommunities]);useEffect(function(){if(isAuthorized===false){navigate(\"/access-denied\");}},[isAuthorized,navigate]);if(!post||!joinedCommunities)return/*#__PURE__*/_jsx(\"div\",{className:\"col-span-3 flex justify-center items-center h-screen\",children:/*#__PURE__*/_jsx(CommonLoading,{})});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PostView,{post:post,userData:userData}),/*#__PURE__*/_jsx(CommentSidebar,{comments:post.comments})]});};export default OwnPost;","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useMemo","getOwnPostAction","useNavigate","useParams","CommonLoading","PostView","CommentSidebar","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","OwnPost","_useParams","postId","dispatch","navigate","userData","state","_state$auth","auth","joinedCommunities","_state$community","_state$community$join","community","map","_ref","_id","_useSelector","posts","post","ownPost","isAuthorized","includes","className","children","comments"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/pages/OwnPost.jsx"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useMemo } from \"react\";\nimport { getOwnPostAction } from \"../redux/actions/postActions\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport CommonLoading from \"../components/loader/CommonLoading\";\n\nimport PostView from \"../components/post/PostView\";\nimport CommentSidebar from \"../components/post/CommentSidebar\";\n\nconst OwnPost = () => {\n  const { postId } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userData = useSelector((state) => state.auth?.userData);\n\n  const joinedCommunities = useSelector((state) =>\n    state.community?.joinedCommunities?.map(({ _id }) => _id)\n  );\n\n  useEffect(() => {\n    dispatch(getOwnPostAction(postId));\n  }, [dispatch, postId]);\n\n  const { ownPost: post } = useSelector((state) => state.posts);\n\n  const isAuthorized = useMemo(() => {\n    return post && joinedCommunities?.includes(post.community._id);\n  }, [post, joinedCommunities]);\n\n  useEffect(() => {\n    if (isAuthorized === false) {\n      navigate(\"/access-denied\");\n    }\n  }, [isAuthorized, navigate]);\n\n  if (!post || !joinedCommunities)\n    return (\n      <div className=\"col-span-3 flex justify-center items-center h-screen\">\n        <CommonLoading />\n      </div>\n    );\n\n  return (\n    <>\n      <PostView post={post} userData={userData} />\n      <CommentSidebar comments={post.comments} />\n    </>\n  );\n};\n\nexport default OwnPost;\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,SAAS,CAAEC,OAAO,KAAQ,OAAO,CAC1C,OAASC,gBAAgB,KAAQ,8BAA8B,CAC/D,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,aAAa,KAAM,oCAAoC,CAE9D,MAAO,CAAAC,QAAQ,KAAM,6BAA6B,CAClD,MAAO,CAAAC,cAAc,KAAM,mCAAmC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/D,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpB,IAAAC,UAAA,CAAmBX,SAAS,CAAC,CAAC,CAAtBY,MAAM,CAAAD,UAAA,CAANC,MAAM,CACd,GAAM,CAAAC,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAmB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9B,GAAM,CAAAgB,QAAQ,CAAGrB,WAAW,CAAC,SAACsB,KAAK,MAAAC,WAAA,QAAAA,WAAA,CAAKD,KAAK,CAACE,IAAI,UAAAD,WAAA,iBAAVA,WAAA,CAAYF,QAAQ,GAAC,CAE7D,GAAM,CAAAI,iBAAiB,CAAGzB,WAAW,CAAC,SAACsB,KAAK,MAAAI,gBAAA,CAAAC,qBAAA,QAAAD,gBAAA,CAC1CJ,KAAK,CAACM,SAAS,UAAAF,gBAAA,kBAAAC,qBAAA,CAAfD,gBAAA,CAAiBD,iBAAiB,UAAAE,qBAAA,iBAAlCA,qBAAA,CAAoCE,GAAG,CAAC,SAAAC,IAAA,KAAG,CAAAC,GAAG,CAAAD,IAAA,CAAHC,GAAG,OAAO,CAAAA,GAAG,GAAC,EAC3D,CAAC,CAED7B,SAAS,CAAC,UAAM,CACdiB,QAAQ,CAACf,gBAAgB,CAACc,MAAM,CAAC,CAAC,CACpC,CAAC,CAAE,CAACC,QAAQ,CAAED,MAAM,CAAC,CAAC,CAEtB,IAAAc,YAAA,CAA0BhC,WAAW,CAAC,SAACsB,KAAK,QAAK,CAAAA,KAAK,CAACW,KAAK,GAAC,CAA5CC,IAAI,CAAAF,YAAA,CAAbG,OAAO,CAEf,GAAM,CAAAC,YAAY,CAAGjC,OAAO,CAAC,UAAM,CACjC,MAAO,CAAA+B,IAAI,GAAIT,iBAAiB,SAAjBA,iBAAiB,iBAAjBA,iBAAiB,CAAEY,QAAQ,CAACH,IAAI,CAACN,SAAS,CAACG,GAAG,CAAC,EAChE,CAAC,CAAE,CAACG,IAAI,CAAET,iBAAiB,CAAC,CAAC,CAE7BvB,SAAS,CAAC,UAAM,CACd,GAAIkC,YAAY,GAAK,KAAK,CAAE,CAC1BhB,QAAQ,CAAC,gBAAgB,CAAC,CAC5B,CACF,CAAC,CAAE,CAACgB,YAAY,CAAEhB,QAAQ,CAAC,CAAC,CAE5B,GAAI,CAACc,IAAI,EAAI,CAACT,iBAAiB,CAC7B,mBACEd,IAAA,QAAK2B,SAAS,CAAC,sDAAsD,CAAAC,QAAA,cACnE5B,IAAA,CAACJ,aAAa,GAAE,CAAC,CACd,CAAC,CAGV,mBACEQ,KAAA,CAAAF,SAAA,EAAA0B,QAAA,eACE5B,IAAA,CAACH,QAAQ,EAAC0B,IAAI,CAAEA,IAAK,CAACb,QAAQ,CAAEA,QAAS,CAAE,CAAC,cAC5CV,IAAA,CAACF,cAAc,EAAC+B,QAAQ,CAAEN,IAAI,CAACM,QAAS,CAAE,CAAC,EAC3C,CAAC,CAEP,CAAC,CAED,cAAe,CAAAxB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}