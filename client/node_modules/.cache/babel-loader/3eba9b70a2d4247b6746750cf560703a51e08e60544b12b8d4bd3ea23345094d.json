{"ast":null,"code":"import { ADMIN_API, handleApiError } from \"./utils\";\nexport const signIn = async credential => {\n  try {\n    const res = await ADMIN_API.post(\"/signin\", credential);\n    return {\n      error: null,\n      data: res.data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getServicePreferences = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/preferences\");\n    return {\n      error: null,\n      data: res.data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const updateServicePreferences = async preferences => {\n  try {\n    await ADMIN_API.put(\"/preferences\", preferences);\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getLogs = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/logs\");\n    return {\n      error: null,\n      data: res.data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const deleteLogs = async () => {\n  try {\n    await ADMIN_API.delete(\"/logs\");\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getCommunities = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/communities\");\n    return {\n      error: null,\n      data: res.data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getCommunity = async communityId => {\n  try {\n    const res = await ADMIN_API.get(`/community/${communityId}`);\n    return {\n      error: null,\n      data: res.data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const getModerators = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/moderators\");\n    return {\n      error: null,\n      data: res.data\n    };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const addModerator = async (communityId, moderatorId) => {\n  try {\n    await ADMIN_API.patch(\"/add-moderators\", null, {\n      params: {\n        communityId,\n        moderatorId\n      }\n    });\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\nexport const removeModerator = async (communityId, moderatorId) => {\n  try {\n    await ADMIN_API.patch(\"/remove-moderators\", null, {\n      params: {\n        communityId,\n        moderatorId\n      }\n    });\n  } catch (error) {\n    return handleApiError(error);\n  }\n};","map":{"version":3,"names":["ADMIN_API","handleApiError","signIn","credential","res","post","error","data","getServicePreferences","get","updateServicePreferences","preferences","put","getLogs","deleteLogs","delete","getCommunities","getCommunity","communityId","getModerators","addModerator","moderatorId","patch","params","removeModerator"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/redux/api/adminAPI.js"],"sourcesContent":["import { ADMIN_API, handleApiError } from \"./utils\";\n\nexport const signIn = async (credential) => {\n  try {\n    const res = await ADMIN_API.post(\"/signin\", credential);\n    return { error: null, data: res.data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getServicePreferences = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/preferences\");\n    return { error: null, data: res.data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const updateServicePreferences = async (preferences) => {\n  try {\n    await ADMIN_API.put(\"/preferences\", preferences);\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getLogs = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/logs\");\n    return { error: null, data: res.data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const deleteLogs = async () => {\n  try {\n    await ADMIN_API.delete(\"/logs\");\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getCommunities = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/communities\");\n    return { error: null, data: res.data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getCommunity = async (communityId) => {\n  try {\n    const res = await ADMIN_API.get(`/community/${communityId}`);\n    return { error: null, data: res.data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const getModerators = async () => {\n  try {\n    const res = await ADMIN_API.get(\"/moderators\");\n    return { error: null, data: res.data };\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const addModerator = async (communityId, moderatorId) => {\n  try {\n    await ADMIN_API.patch(\"/add-moderators\", null, {\n      params: { communityId, moderatorId },\n    });\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n\nexport const removeModerator = async (communityId, moderatorId) => {\n  try {\n    await ADMIN_API.patch(\"/remove-moderators\", null, {\n      params: { communityId, moderatorId },\n    });\n  } catch (error) {\n    return handleApiError(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}