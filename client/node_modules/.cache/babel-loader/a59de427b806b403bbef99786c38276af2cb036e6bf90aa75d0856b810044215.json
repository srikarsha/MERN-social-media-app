{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nAPI.interceptors.request.use(req => {\n  var _JSON$parse;\n  const accessToken = (_JSON$parse = JSON.parse(localStorage.getItem(\"profile\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.accessToken;\n  if (accessToken) {\n    req.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return req;\n});\nexport const refreshTokenAction = refreshToken => async dispatch => {\n  try {\n    const response = await API.post(\"/users/refresh-token\", {\n      refreshToken\n    });\n    const profile = JSON.parse(localStorage.getItem(\"profile\"));\n    const payload = response.data;\n    localStorage.setItem(\"profile\", JSON.stringify({\n      ...profile,\n      ...payload\n    }));\n    dispatch({\n      type: \"REFRESH_TOKEN_SUCCESS\",\n      payload: payload\n    });\n  } catch (error) {\n    localStorage.removeItem(\"profile\");\n    dispatch({\n      type: \"REFRESH_TOKEN_FAIL\",\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","req","_JSON$parse","accessToken","JSON","parse","localStorage","getItem","Authorization","refreshTokenAction","refreshToken","dispatch","response","post","profile","payload","data","setItem","stringify","type","error","removeItem"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/redux/actions/refreshTokenAction.js"],"sourcesContent":["import axios from \"axios\";\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nAPI.interceptors.request.use((req) => {\n  const accessToken = JSON.parse(localStorage.getItem(\"profile\"))?.accessToken;\n  if (accessToken) {\n    req.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return req;\n});\nexport const refreshTokenAction = (refreshToken) => async (dispatch) => {\n  try {\n    const response = await API.post(\"/users/refresh-token\", {\n      refreshToken,\n    });\n    const profile = JSON.parse(localStorage.getItem(\"profile\"));\n    const payload = response.data;\n    localStorage.setItem(\"profile\", JSON.stringify({ ...profile, ...payload }));\n    dispatch({\n      type: \"REFRESH_TOKEN_SUCCESS\",\n      payload: payload,\n    });\n  } catch (error) {\n    localStorage.removeItem(\"profile\");\n    dispatch({\n      type: \"REFRESH_TOKEN_FAIL\",\n      payload: error.response.data,\n    });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAAA,IAAAC,WAAA;EACpC,MAAMC,WAAW,IAAAD,WAAA,GAAGE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAAL,WAAA,uBAA3CA,WAAA,CAA6CC,WAAW;EAC5E,IAAIA,WAAW,EAAE;IACfF,GAAG,CAACJ,OAAO,CAACW,aAAa,GAAI,UAASL,WAAY,EAAC;EACrD;EACA,OAAOF,GAAG;AACZ,CAAC,CAAC;AACF,OAAO,MAAMQ,kBAAkB,GAAIC,YAAY,IAAK,MAAOC,QAAQ,IAAK;EACtE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAI,CAAC,sBAAsB,EAAE;MACtDH;IACF,CAAC,CAAC;IACF,MAAMI,OAAO,GAAGV,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3D,MAAMQ,OAAO,GAAGH,QAAQ,CAACI,IAAI;IAC7BV,YAAY,CAACW,OAAO,CAAC,SAAS,EAAEb,IAAI,CAACc,SAAS,CAAC;MAAE,GAAGJ,OAAO;MAAE,GAAGC;IAAQ,CAAC,CAAC,CAAC;IAC3EJ,QAAQ,CAAC;MACPQ,IAAI,EAAE,uBAAuB;MAC7BJ,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdd,YAAY,CAACe,UAAU,CAAC,SAAS,CAAC;IAClCV,QAAQ,CAAC;MACPQ,IAAI,EAAE,oBAAoB;MAC1BJ,OAAO,EAAEK,KAAK,CAACR,QAAQ,CAACI;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}