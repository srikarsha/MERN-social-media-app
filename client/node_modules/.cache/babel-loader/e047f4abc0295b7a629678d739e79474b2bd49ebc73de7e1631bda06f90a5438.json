{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { tokenMiddleware } from \"../middlewares/tokenMiddleware\";\nimport { initializeAuth } from \"./actions/authActions\";\nconst createAppStore = async () => {\n  try {\n    const store = configureStore({\n      reducer: rootReducer,\n      middleware: [thunk, tokenMiddleware]\n    });\n    await store.dispatch(initializeAuth());\n    return store;\n  } catch (err) {\n    throw new Error(\"Some error occurred\");\n  }\n};\nexport default createAppStore;","map":{"version":3,"names":["configureStore","thunk","rootReducer","tokenMiddleware","initializeAuth","createAppStore","store","reducer","middleware","dispatch","err","Error"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { tokenMiddleware } from \"../middlewares/tokenMiddleware\";\nimport { initializeAuth } from \"./actions/authActions\";\n\nconst createAppStore = async () => {\n  try {\n    const store = configureStore({\n      reducer: rootReducer,\n      middleware: [thunk, tokenMiddleware],\n    });\n\n    await store.dispatch(initializeAuth());\n\n    return store;\n  } catch (err) {\n    throw new Error(\"Some error occurred\");\n  }\n};\n\nexport default createAppStore;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,YAAY;AACpC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,KAAK,GAAGN,cAAc,CAAC;MAC3BO,OAAO,EAAEL,WAAW;MACpBM,UAAU,EAAE,CAACP,KAAK,EAAEE,eAAe;IACrC,CAAC,CAAC;IAEF,MAAMG,KAAK,CAACG,QAAQ,CAACL,cAAc,CAAC,CAAC,CAAC;IAEtC,OAAOE,KAAK;EACd,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;AACF,CAAC;AAED,eAAeN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}