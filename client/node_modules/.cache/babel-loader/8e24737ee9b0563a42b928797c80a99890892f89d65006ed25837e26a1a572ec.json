{"ast":null,"code":"import * as types from \"../constants/communityConstants\";\nimport { LOGOUT } from \"../constants/authConstants\";\nimport { GET_MOD_PROFILE_SUCCESS, GET_MOD_PROFILE_FAIL } from \"../constants/authConstants\";\nconst initialState = {\n  modProfile: null,\n  communityMembers: [],\n  communityMods: [],\n  bannedUsers: [],\n  modError: null\n};\nconst moderationReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOGOUT:\n      return {\n        ...state,\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: null\n      };\n    case GET_MOD_PROFILE_SUCCESS:\n      return {\n        ...state,\n        modProfile: payload ? payload.moderatorInfo : null,\n        modError: null\n      };\n    case GET_MOD_PROFILE_FAIL:\n      return {\n        ...state,\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: payload\n      };\n    case types.GET_COMMUNITY_MEMBERS_SUCCESS:\n      return {\n        ...state,\n        communityMembers: payload ? payload.members : [],\n        bannedUsers: payload ? payload.bannedUsers : [],\n        modError: null\n      };\n    case types.GET_COMMUNITY_MEMBERS_FAIL:\n      return {\n        ...state,\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: payload\n      };\n    case types.GET_COMMUNITY_MODS_SUCCESS:\n      return {\n        ...state,\n        communityMods: payload\n      };\n    case types.GET_COMMUNITY_MODS_FAIL:\n      return {\n        ...state,\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: payload\n      };\n    default:\n      return state;\n  }\n};\nexport default moderationReducer;","map":{"version":3,"names":["types","LOGOUT","GET_MOD_PROFILE_SUCCESS","GET_MOD_PROFILE_FAIL","initialState","modProfile","communityMembers","communityMods","bannedUsers","modError","moderationReducer","state","action","type","payload","moderatorInfo","GET_COMMUNITY_MEMBERS_SUCCESS","members","GET_COMMUNITY_MEMBERS_FAIL","GET_COMMUNITY_MODS_SUCCESS","GET_COMMUNITY_MODS_FAIL"],"sources":["E:/SEM 4/MERN/end_sem_project/SocialEcho-main/client/src/redux/reducers/moderation.js"],"sourcesContent":["import * as types from \"../constants/communityConstants\";\nimport { LOGOUT } from \"../constants/authConstants\";\n\nimport {\n  GET_MOD_PROFILE_SUCCESS,\n  GET_MOD_PROFILE_FAIL,\n} from \"../constants/authConstants\";\nconst initialState = {\n  modProfile: null,\n  communityMembers: [],\n  communityMods: [],\n  bannedUsers: [],\n  modError: null,\n};\n\nconst moderationReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGOUT:\n      return {\n        ...state,\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: null,\n      };\n\n    case GET_MOD_PROFILE_SUCCESS:\n      return {\n        ...state,\n        modProfile: payload ? payload.moderatorInfo : null,\n        modError: null,\n      };\n\n    case GET_MOD_PROFILE_FAIL:\n      return {\n        ...state,\n\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: payload,\n      };\n\n    case types.GET_COMMUNITY_MEMBERS_SUCCESS:\n      return {\n        ...state,\n        communityMembers: payload ? payload.members : [],\n        bannedUsers: payload ? payload.bannedUsers : [],\n        modError: null,\n      };\n\n    case types.GET_COMMUNITY_MEMBERS_FAIL:\n      return {\n        ...state,\n\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: payload,\n      };\n\n    case types.GET_COMMUNITY_MODS_SUCCESS:\n      return {\n        ...state,\n        communityMods: payload,\n      };\n\n    case types.GET_COMMUNITY_MODS_FAIL:\n      return {\n        ...state,\n\n        modProfile: null,\n        communityMembers: [],\n        communityMods: [],\n        bannedUsers: [],\n        modError: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default moderationReducer;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,iCAAiC;AACxD,SAASC,MAAM,QAAQ,4BAA4B;AAEnD,SACEC,uBAAuB,EACvBC,oBAAoB,QACf,4BAA4B;AACnC,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,IAAI;EAChBC,gBAAgB,EAAE,EAAE;EACpBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EAC1D,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKZ,MAAM;MACT,OAAO;QACL,GAAGU,KAAK;QACRN,UAAU,EAAE,IAAI;QAChBC,gBAAgB,EAAE,EAAE;QACpBC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC;IAEH,KAAKP,uBAAuB;MAC1B,OAAO;QACL,GAAGS,KAAK;QACRN,UAAU,EAAES,OAAO,GAAGA,OAAO,CAACC,aAAa,GAAG,IAAI;QAClDN,QAAQ,EAAE;MACZ,CAAC;IAEH,KAAKN,oBAAoB;MACvB,OAAO;QACL,GAAGQ,KAAK;QAERN,UAAU,EAAE,IAAI;QAChBC,gBAAgB,EAAE,EAAE;QACpBC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAEK;MACZ,CAAC;IAEH,KAAKd,KAAK,CAACgB,6BAA6B;MACtC,OAAO;QACL,GAAGL,KAAK;QACRL,gBAAgB,EAAEQ,OAAO,GAAGA,OAAO,CAACG,OAAO,GAAG,EAAE;QAChDT,WAAW,EAAEM,OAAO,GAAGA,OAAO,CAACN,WAAW,GAAG,EAAE;QAC/CC,QAAQ,EAAE;MACZ,CAAC;IAEH,KAAKT,KAAK,CAACkB,0BAA0B;MACnC,OAAO;QACL,GAAGP,KAAK;QAERN,UAAU,EAAE,IAAI;QAChBC,gBAAgB,EAAE,EAAE;QACpBC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAEK;MACZ,CAAC;IAEH,KAAKd,KAAK,CAACmB,0BAA0B;MACnC,OAAO;QACL,GAAGR,KAAK;QACRJ,aAAa,EAAEO;MACjB,CAAC;IAEH,KAAKd,KAAK,CAACoB,uBAAuB;MAChC,OAAO;QACL,GAAGT,KAAK;QAERN,UAAU,EAAE,IAAI;QAChBC,gBAAgB,EAAE,EAAE;QACpBC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAEK;MACZ,CAAC;IAEH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}